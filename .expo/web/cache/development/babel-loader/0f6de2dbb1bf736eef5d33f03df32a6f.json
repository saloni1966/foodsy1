{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/salonisharma/Downloads/foodsy1-main/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport CustomButton from \"../components/CustomButton\";\nimport CustomInput from \"../components/CustomInput\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.userLogin = function (email, password) {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        return Alert.alert(\"Successfully Logged In\");\n      }).catch(function (error) {\n        return Alert.alert(error.message);\n      });\n    };\n\n    _this.handleSignUp = function (email, password) {\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n        Alert.alert(\"User Added Successfully\");\n      }).catch(function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    _this.userSignUp = function (email, password, Cpassword) {\n      if (passowrd != Cpassword) {\n        return Alert.alert(\"Passwords do not match\");\n      } else {\n        firebase.auth.createUserWithEmailAndPassword(email, password).then(function () {\n          db.collection('users').add({\n            email_id: _this.state.email,\n            first_name: _this.state.firstName,\n            last_name: _this.state.lastName,\n            age: _this.state.age,\n            dob: _this.state.dob\n          });\n          return Alert.alert(\"User has been succesfully added!\", \"\", [{\n            text: 'OK',\n            onPress: function onPress() {\n              return _this.setState({\n                isModalVisible: false\n              });\n            }\n          }]);\n        }).catch(function (error) {\n          return Alert.alert(error.message);\n        });\n      }\n    };\n\n    _this.showModal = function () {\n      return React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: _this.state.isModalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.modalContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 8\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.KeyboardAvoidingView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.modalTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, \"Registration\"), React.createElement(CustomInput, {\n        placeholder: \"abc@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"First Name\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Last Name\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Re-enter Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Age\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Date of Birth\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomButton, {\n        title: \"Register\",\n        onPress: function onPress() {\n          return _this.userSignUp(_this.state.email, _this.state.password, _this.state.Cpassword);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomButton, {\n        title: \"Cancel\",\n        onPress: function onPress() {\n          return _this.setState({\n            isModalVisible: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      })))));\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      Cpassword: \"\",\n      age: \"\",\n      dob: \"\",\n      isModalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      return React.createElement(View, {\n        style: styles.containe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.upperConatainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/cashew.jpeg\"),\n        style: {\n          width: 400,\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.middleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, React.createElement(CustomInput, {\n        placeholder: \"abc@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomButton, {\n        title: \"Login\",\n        onPress: this.userLogin(email, password),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomButton, {\n        title: \"SignUp\",\n        onPress: this.handleSignUp(email, password),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: \"underline\"\n  },\n  scanButton: {\n    backgroundColor: \"#2196F3\",\n    padding: 10,\n    margin: 10,\n    borderRadius: 15,\n    height: 50,\n    width: 75\n  },\n  buttonText: {\n    fontSize: 21\n  },\n  InputView: {\n    flexDirection: \"row\"\n  },\n  InputBox: {\n    borderWidth: 1.5,\n    width: 250,\n    height: 50,\n    fontSize: 20,\n    marginTop: 10,\n    alignSelf: 'center'\n  },\n  submitButton: {\n    width: 300,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    backgroundColor: \"#ff9800\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.30,\n    shadowRadius: 10.32,\n    elevation: 16,\n    padding: 10\n  },\n  modalTitle: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    fontSize: 30,\n    color: '#ff5722',\n    margin: 50\n  },\n  modalContainer: {\n    flex: 1,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: \"#ffff\",\n    marginRight: 30,\n    marginLeft: 30,\n    marginTop: 80,\n    marginBottom: 80\n  }\n});","map":{"version":3,"sources":["/Users/salonisharma/Downloads/foodsy1-main/screens/LoginScreen.js"],"names":["React","db","firebase","CustomButton","CustomInput","RFValue","LoginScreen","userLogin","email","password","auth","signInWithEmailAndPassword","then","Alert","alert","catch","error","message","handleSignUp","createUserWithEmailAndPassword","response","userSignUp","Cpassword","passowrd","collection","add","email_id","state","first_name","firstName","last_name","lastName","age","dob","text","onPress","setState","isModalVisible","showModal","styles","modalContainer","width","KeyboardAvoidingView","modalTitle","containe","upperConatainer","require","height","middleContainer","Component","StyleSheet","create","container","flex","justifyContent","alignItems","marginTop","displayText","fontSize","textDecorationLine","scanButton","backgroundColor","padding","margin","borderRadius","buttonText","InputView","flexDirection","InputBox","borderWidth","alignSelf","submitButton","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","marginRight","marginLeft","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  TextInput,\r\n  Image,\r\n  Alert,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Modal,\r\n} from \"react-native\";\r\nimport db from '../config'\r\nimport firebase from \"firebase\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport CustomInput from \"../components/CustomInput\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nexport default class LoginScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      Cpassword: \"\",\r\n      age: \"\",\r\n      dob: \"\",\r\n      isModalVisible: false,\r\n    };\r\n  }\r\n\r\n\r\n  userLogin = (email, password) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        return Alert.alert(\"Successfully Logged In\");\r\n      })\r\n      .catch((error) => {\r\n        return Alert.alert(error.message);\r\n      });\r\n  };\r\n\r\n  handleSignUp = (email, password) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        Alert.alert(\"User Added Successfully\");\r\n      })\r\n      .catch((error) => {\r\n        Alert.alert(error.message);\r\n      });\r\n  };\r\n\r\n  userSignUp = (email, password, Cpassword,) => {\r\n    if (passowrd != Cpassword){\r\n      return Alert.alert(\"Passwords do not match\")\r\n    }\r\n    else{firebase\r\n      .auth.\r\n      createUserWithEmailAndPassword(email, password)\r\n      .then(()=>{\r\n      db.collection('users').add({\r\n        email_id: this.state.email,\r\n        first_name: this.state.firstName,\r\n        last_name: this.state.lastName,\r\n        age: this.state.age,\r\n        dob: this.state.dob,\r\n      })\r\n      return Alert.alert(\"User has been succesfully added!\" ,\"\",[\r\n        {\r\n          text : 'OK' ,onPress :()=> this.setState({\r\n            isModalVisible: false\r\n          }) \r\n        }\r\n      ])\r\n    })\r\n    .catch((error)=>{\r\n      return Alert.alert(error.message)\r\n    })\r\n      \r\n    \r\n    }\r\n  }\r\n\r\n  showModal=()=>{return(\r\n    <Modal\r\n    animationType = \"fade\"\r\n    transparent = {true}\r\n    visible = {this.state.isModalVisible}\r\n    >\r\n       <View style={styles.modalContainer}>\r\n      <ScrollView style={{width:'100%'}}>\r\n        <KeyboardAvoidingView style={styles.KeyboardAvoidingView}>\r\n        <Text\r\n          style={styles.modalTitle}\r\n          >Registration</Text>\r\n      <CustomInput\r\n              placeholder={\"abc@example.com\"}\r\n              keyboardType={\"email-address\"}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  email: text,\r\n                });\r\n              }}\r\n            />\r\n      \r\n      <CustomInput\r\n              placeholder={\"First Name\"}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  email: text,\r\n                });\r\n              }}\r\n            />\r\n            <CustomInput\r\n              placeholder={\"Last Name\"}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  email: text,\r\n                });\r\n              }}\r\n            />\r\n            <CustomInput\r\n              placeholder={\"Enter Password\"}\r\n              secureTextEntry={true}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  password: text,\r\n                });\r\n              }}\r\n            />\r\n            <CustomInput\r\n              placeholder={\"Re-enter Password\"}\r\n              secureTextEntry={true}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  password: text,\r\n                });\r\n              }}\r\n            />\r\n            <CustomInput\r\n              placeholder={\"Age\"}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  email: text,\r\n                });\r\n              }}\r\n            />\r\n            <CustomInput\r\n              placeholder={\"Date of Birth\"}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  email: text,\r\n                });\r\n              }}\r\n            />\r\n\r\n\r\n            <CustomButton title = {\"Register\"} onPress = {()=> this.userSignUp(this.state.email, this.state.password, this.state.Cpassword)}/>\r\n\r\n            <CustomButton title = {\"Cancel\"} onPress = {()=> this.setState({isModalVisible : false})}/>\r\n            </KeyboardAvoidingView>\r\n      </ScrollView>\r\n    </View>\r\n    \r\n    </Modal>\r\n  \r\n  )}\r\n  \r\n  render() {\r\n    var { email, password } = this.state;\r\n    return (\r\n      <View style={styles.containe}>\r\n        \r\n        <KeyboardAvoidingView>\r\n\r\n          <View style={styles.upperConatainer}>\r\n            <Image\r\n              source={require(\"../assets/cashew.jpeg\")}\r\n              style={{ width: 400, height: 400 }}\r\n            />\r\n          </View>\r\n        \r\n          <View style={styles.middleContainer}>\r\n            <CustomInput\r\n              placeholder={\"abc@example.com\"}\r\n              keyboardType={\"email-address\"}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  email: text,\r\n                });\r\n              }}\r\n            />\r\n            <CustomInput\r\n              placeholder={\"Enter Password\"}\r\n              secureTextEntry={true}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  password: text,\r\n                });\r\n              }}\r\n            />\r\n            \r\n            <CustomButton title = {\"Login\"} onPress = {this.userLogin(email,password)}/>\r\n            <CustomButton title = {\"SignUp\"} onPress = {this.handleSignUp(email,password)}/>\r\n          \r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </View>\r\n      //Image\r\n      //customInput\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  displayText: {\r\n    fontSize: 15,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  scanButton: {\r\n    backgroundColor: \"#2196F3\",\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    height: 50,\r\n    width: 75,\r\n  },\r\n  buttonText: {\r\n    fontSize: 21,\r\n  },\r\n  InputView: {\r\n    flexDirection: \"row\",\r\n  },\r\n  InputBox: {\r\n    borderWidth: 1.5,\r\n    width: 250,\r\n    height: 50,\r\n    fontSize: 20,\r\n    marginTop: 10,\r\n    alignSelf: 'center'\r\n  },\r\n\r\n  submitButton: {\r\n    width:300,\r\n    height:50,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    borderRadius:25,\r\n    backgroundColor:\"#ff9800\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n       width: 0,\r\n       height: 8,\r\n    },\r\n    shadowOpacity: 0.30,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    padding: 10\r\n  },\r\n  modalTitle :{\r\n    justifyContent:'center',\r\n    alignSelf:'center',\r\n    fontSize:30,\r\n    color:'#ff5722',\r\n    margin:50\r\n  },\r\n  modalContainer:{\r\n    flex:1,\r\n    borderRadius:20,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    backgroundColor:\"#ffff\",\r\n    marginRight:30,\r\n    marginLeft : 30,\r\n    marginTop:80,\r\n    marginBottom:80,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}