{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/salonisharma/Downloads/foodsy1-main/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport CustomButton from \"../components/CustomButton\";\nimport CustomInput from \"../components/CustomInput\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.userLogin = function (email, password) {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        return Alert.alert(\"Successfully Logged In\");\n      }).catch(function (error) {\n        return Alert.alert(error.message);\n      });\n    };\n\n    _this.userSignUp = function (email, password, Cpassword) {\n      if (passowrd != Cpassword) {\n        return Alert.alert(\"Passwords do not match\");\n      } else {\n        firebase.auth.createUserWithEmailAndPassword(email, password).then(function () {\n          db.collection(\"users\").add({\n            email_id: _this.state.email,\n            first_name: _this.state.firstName,\n            last_name: _this.state.lastName,\n            age: _this.state.age,\n            dob: _this.state.dob\n          });\n          return Alert.alert(\"User has been succesfully added!\", \"\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return _this.setState({\n                isModalVisible: false\n              });\n            }\n          }]);\n        }).catch(function (error) {\n          return Alert.alert(error.message);\n        });\n      }\n    };\n\n    _this.showModal = function () {\n      return React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: _this.state.isModalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.modalContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.KeyboardAvoidingView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.modalTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, \"Registration\"), React.createElement(CustomInput, {\n        placeholder: \"abc@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"First Name\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Last Name\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Re-enter Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Age\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Date of Birth\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this.userSignUp(_this.state.email, _this.state.password, _this.state.Cpassword);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }, \"Register\")), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this.setState({\n            isModalVisible: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#ff5722\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))))));\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      Cpassword: \"\",\n      age: \"\",\n      dob: \"\",\n      isModalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      return React.createElement(View, {\n        style: styles.containe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.upperConatainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/cashew.jpeg\"),\n        style: {\n          width: 400,\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      })), this.showModal(), React.createElement(View, {\n        style: styles.middleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, React.createElement(CustomInput, {\n        placeholder: \"abc@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomInput, {\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomButton, {\n        title: \"Login\",\n        onPress: this.userLogin(email, password),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.setState({\n            isModalVisible: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }\n      }, \"SignUp\")))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  button: {\n    width: 300,\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 25,\n    backgroundColor: \"#ff1000\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10.32,\n    elevation: 16,\n    padding: 10,\n    alignSelf: \"center\",\n    margin: 20\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: \"underline\"\n  },\n  buttonText: {\n    color: \"#ffff\",\n    fontWeight: \"200\",\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: \"#2196F3\",\n    padding: 10,\n    margin: 10,\n    borderRadius: 15,\n    height: 50,\n    width: 75\n  },\n  buttonText: {\n    fontSize: 21\n  },\n  InputView: {\n    flexDirection: \"row\"\n  },\n  InputBox: {\n    borderWidth: 1.5,\n    width: 250,\n    height: 50,\n    fontSize: 20,\n    marginTop: 10,\n    alignSelf: \"center\"\n  },\n  submitButton: {\n    width: 300,\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 25,\n    backgroundColor: \"#ff9800\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10.32,\n    elevation: 16,\n    padding: 10\n  },\n  modalTitle: {\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    fontSize: 30,\n    color: \"#ff5722\",\n    margin: 50\n  },\n  modalContainer: {\n    flex: 1,\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffff\",\n    marginRight: 30,\n    marginLeft: 30,\n    marginTop: 80,\n    marginBottom: 80\n  }\n});","map":{"version":3,"sources":["/Users/salonisharma/Downloads/foodsy1-main/screens/LoginScreen.js"],"names":["React","db","firebase","CustomButton","CustomInput","RFValue","LoginScreen","userLogin","email","password","auth","signInWithEmailAndPassword","then","Alert","alert","catch","error","message","userSignUp","Cpassword","passowrd","createUserWithEmailAndPassword","collection","add","email_id","state","first_name","firstName","last_name","lastName","age","dob","text","onPress","setState","isModalVisible","showModal","styles","modalContainer","width","KeyboardAvoidingView","modalTitle","button","buttonText","color","containe","upperConatainer","require","height","middleContainer","Component","StyleSheet","create","container","flex","justifyContent","alignItems","marginTop","borderRadius","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","padding","alignSelf","margin","displayText","fontSize","textDecorationLine","fontWeight","scanButton","InputView","flexDirection","InputBox","borderWidth","submitButton","marginRight","marginLeft","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  TextInput,\r\n  Image,\r\n  Alert,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Modal,\r\n} from \"react-native\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport CustomInput from \"../components/CustomInput\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nexport default class LoginScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      Cpassword: \"\",\r\n      age: \"\",\r\n      dob: \"\",\r\n      isModalVisible: false,\r\n    };\r\n  }\r\n\r\n  userLogin = (email, password) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        return Alert.alert(\"Successfully Logged In\");\r\n      })\r\n      .catch((error) => {\r\n        return Alert.alert(error.message);\r\n      });\r\n  };\r\n\r\n  userSignUp = (email, password, Cpassword) => {\r\n    if (passowrd != Cpassword) {\r\n      return Alert.alert(\"Passwords do not match\");\r\n    } else {\r\n      firebase.auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          db.collection(\"users\").add({\r\n            email_id: this.state.email,\r\n            first_name: this.state.firstName,\r\n            last_name: this.state.lastName,\r\n            age: this.state.age,\r\n            dob: this.state.dob,\r\n          });\r\n          return Alert.alert(\"User has been succesfully added!\", \"\", [\r\n            {\r\n              text: \"OK\",\r\n              onPress: () =>\r\n                this.setState({\r\n                  isModalVisible: false,\r\n                }),\r\n            },\r\n          ]);\r\n        })\r\n        .catch((error) => {\r\n          return Alert.alert(error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    return (\r\n      <Modal\r\n        animationType=\"fade\"\r\n        transparent={true}\r\n        visible={this.state.isModalVisible}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <ScrollView style={{ width: \"100%\" }}>\r\n            <KeyboardAvoidingView style={styles.KeyboardAvoidingView}>\r\n              <Text style={styles.modalTitle}>Registration</Text>\r\n              <CustomInput\r\n                placeholder={\"abc@example.com\"}\r\n                keyboardType={\"email-address\"}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    email: text,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <CustomInput\r\n                placeholder={\"First Name\"}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    email: text,\r\n                  });\r\n                }}\r\n              />\r\n              <CustomInput\r\n                placeholder={\"Last Name\"}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    email: text,\r\n                  });\r\n                }}\r\n              />\r\n              <CustomInput\r\n                placeholder={\"Enter Password\"}\r\n                secureTextEntry={true}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    password: text,\r\n                  });\r\n                }}\r\n              />\r\n              <CustomInput\r\n                placeholder={\"Re-enter Password\"}\r\n                secureTextEntry={true}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    password: text,\r\n                  });\r\n                }}\r\n              />\r\n              <CustomInput\r\n                placeholder={\"Age\"}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    email: text,\r\n                  });\r\n                }}\r\n              />\r\n              <CustomInput\r\n                placeholder={\"Date of Birth\"}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    email: text,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={() =>\r\n                  this.userSignUp(\r\n                    this.state.email,\r\n                    this.state.password,\r\n                    this.state.Cpassword\r\n                  )\r\n                }\r\n              >\r\n                <Text style={styles.buttonText}>Register</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={() => this.setState({ isModalVisible: false })}\r\n              >\r\n                <Text style={{ color: \"#ff5722\" }}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </KeyboardAvoidingView>\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    var { email, password } = this.state;\r\n    return (\r\n      <View style={styles.containe}>\r\n        <KeyboardAvoidingView>\r\n          <View style={styles.upperConatainer}>\r\n            <Image\r\n              source={require(\"../assets/cashew.jpeg\")}\r\n              style={{ width: 400, height: 400 }}\r\n            />\r\n          </View>\r\n          {this.showModal()}\r\n          <View style={styles.middleContainer}>\r\n            <CustomInput\r\n              placeholder={\"abc@example.com\"}\r\n              keyboardType={\"email-address\"}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  email: text,\r\n                });\r\n              }}\r\n            />\r\n            <CustomInput\r\n              placeholder={\"Enter Password\"}\r\n              secureTextEntry={true}\r\n              onChangeText={(text) => {\r\n                this.setState({\r\n                  password: text,\r\n                });\r\n              }}\r\n            />\r\n\r\n            <CustomButton\r\n              title={\"Login\"}\r\n              onPress={this.userLogin(email, password)}\r\n            />\r\n\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={() => this.setState({ isModalVisible: true })}\r\n            >\r\n              <Text style={styles.buttonText}>SignUp</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </View>\r\n      //Image\r\n      //customInput\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  button: {\r\n    width: 300,\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 25,\r\n    backgroundColor: \"#ff1000\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    padding: 10,\r\n    alignSelf: \"center\",\r\n    margin: 20,\r\n  },\r\n  displayText: {\r\n    fontSize: 15,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  buttonText: {\r\n    color: \"#ffff\",\r\n    fontWeight: \"200\",\r\n    fontSize: 20,\r\n  },\r\n  scanButton: {\r\n    backgroundColor: \"#2196F3\",\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    height: 50,\r\n    width: 75,\r\n  },\r\n  buttonText: {\r\n    fontSize: 21,\r\n  },\r\n  InputView: {\r\n    flexDirection: \"row\",\r\n  },\r\n  InputBox: {\r\n    borderWidth: 1.5,\r\n    width: 250,\r\n    height: 50,\r\n    fontSize: 20,\r\n    marginTop: 10,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  submitButton: {\r\n    width: 300,\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 25,\r\n    backgroundColor: \"#ff9800\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    padding: 10,\r\n  },\r\n  modalTitle: {\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    fontSize: 30,\r\n    color: \"#ff5722\",\r\n    margin: 50,\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    borderRadius: 20,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#ffff\",\r\n    marginRight: 30,\r\n    marginLeft: 30,\r\n    marginTop: 80,\r\n    marginBottom: 80,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}